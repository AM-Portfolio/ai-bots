# Frontend build stage
FROM node:18-alpine AS frontend-builder

WORKDIR /app

# Copy package files first (better caching)
COPY frontend/package*.json ./

# Install dependencies (cached if package.json hasn't changed)
RUN npm ci --prefer-offline --no-audit

# Copy only source files needed for build
COPY frontend/src ./src
COPY frontend/index.html .
COPY frontend/tsconfig*.json .
COPY frontend/vite.config.ts .
COPY frontend/tailwind.config.js .
COPY frontend/postcss.config.js .

# Build frontend
RUN npm run build

# Production stage - serve frontend
FROM nginx:alpine

# Copy built frontend
COPY --from=frontend-builder /app/dist /usr/share/nginx/html

# Copy nginx config
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 3000

CMD ["nginx", "-g", "daemon off;"]
